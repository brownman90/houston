# To Do

## On Deck
=====================================================================

 - **Top:**
   - **Milestones:** show progress (not 0 effort when closed)

 - **Global:**
   - Disable buttons when working

 - **Prune**
   - Rename `Project#color` to `Project#color_name` and `Project#color_value` to `Project#color`
   - Replace unfuddle dump with reporter_email
   - Remove `all_commit_times` from the Version Control Repo API
 
 - **Roles Refactor**
   - Replace hard-coded knowledge of roles:
     - projects#index - columns for maintainers and owners
     - Testing Report, application.html.erb: User.testers
     - ProjectNotification: project.maintainers are CCed on releases, sent test results and configuration errors
   - Extract the "Follower" role to a separate table

 - **Antecedents**
   - Auto-resolve exception antecedents
   - Send support notifications on problem antecedents

 - **Notifications**
   - Send one-off emails that can take advantage of the abilities of each recipient (-> Sidekiq?)
   - Put a link in emails to user's notifications options (automatically logging them in)
   - Style Release Notifications to look OK in Outlook on a PC:
     http://www.campaignmonitor.com/css/ - what CSS is supported by what browser
     http://snook.ca/archives/html_and_css/rounded_corners_experiment_ie/ - rounded rects with VML
     http://stackoverflow.com/questions/10156077/html-that-will-render-correctly-in-outlook-2007-2010
     http://www.webpronews.com/kiss-your-css-goodbye-with-outlook-2007-01
     http://www.emailonacid.com/blog/details/C13/css_padding_in_outlook_2007_and_2010
     http://www.emailonacid.com/blog/details/C13/7_tips_and_tricks_regarding_margins_and_padding_in_html_emails

 - **Daily Report**
   - Regressions?
   - Exceptions that received notices
   - Recent resolved problems
   - Maintenance lights
   - Count of tickets that need estimates?

 - **Weekly Report**
   - Add tests section

 - **Houston-Scheduler**
   - Show tickets that were begun this week (even if they were closed!)
   - Show current percentage
   - Show more than one week of predicted velocity
   - Allow specifying prerequisites for tickets
   - Click to edit ticket in a popup
   - Style tickets ahead of prerequisites negatively
   - **Discussion Needed:** allow discussion to take place
   - **Mixer:** allow creating projects

 - **Testing Report**
   - Show related tickets
   - Allow creating related tickets

 - **Tickets**
   - Support attachments




## Ideas
=====================================================================

Goals:
 - Make Houston flexible enough to use in other contexts
 
#### Refactoring

 - **Engines:**
   - Engines need to supply configuration objects, plug in to config.rb
   - Create a Rails Engine generator for Houston plugins based on Houston::Scheduler

 - **Modularity:**
   - Extract **NewRelic**, and **GitHub** knowledge
   - Refactor hard-coded knowledge about Unfuddle/EP into configuration
     - Replace `config/initializers/hard_coded_knowledge.rb`
     - Unfuddle-specific knowledge of severities (Project Dashboard)
     - in `users_controller.rb`:
       - Unfuddle-specific knowledge of resolution (invalid, duplicate)
       - `User#unfuddle_id` (add `Ticket#reporter_email` : [unfuddle](people/:reporter_id), [github](users/:login))
         - https://api.github.com/users/boblail
         - https://unfuddle.com/support/docs/api/people
         - http://developer.github.com/v3/users/
     - TicketHelper#format_antecedent
     - Don't limit TestingReportController to only use the Unfuddle adapter (have adapters publish their features?)
   - Turn on or off features via config.rb
   - Extract **houston-ci**
   - Extract **houston-releases**
   - Extract **houston-testing-report**
   - Extract **houston-kanban** (rename)

 - **Clean Code:**
   - Duplicate code in `users_controller#index` and `users_controller#show`
   - Duplicate code in Projects#show and WeeklyReport#show
   - Use [actionmailer_inline_css](https://github.com/ndbroadbent/actionmailer_inline_css)?
   - Test Weekly Report classes

#### Robustness

 - **Global:** Handle Timeout::Error
 - **Weekly Report/Exceptions:** problems history is off by 1 week?
 - **Weekly Report:** cache Google Chart images in emails and/or implement server-side SVG library
 - **CI Results:** fails are reported as errors
 - **Project:** allow changing Version Control Location (have tmp folder deleted or whatever)
 - **Testing Notes:** edit a failing testing note at home, SMTP fail, timeout takes 30 seconds!

#### Features

 - **Projects:**
   - Participants (avatars) min/max width | Maintainers = special kind of participant
   - Show retired projects and allow "unretiring" them

 - **Houston-Scheduler:**
   - Allow adding milestones (show time-to-milestone)
   - Add a "The Pipe" view which interleaves work for all projects, taking 1 week bites
   - Expand tickets like Testing Report does
   - Calculate prerequisites/dependencies when applying Queuing Discipline
   - Allow custom queueing disciplines

 - **Releases:**
   - Search [e.g. for commit]
   - Create embeddable front-end for releases
   - Show ticket/change counts in real time when editing a release
   - Allow adding/removing _tickets_ from release notes
   - Add "What's in the pipe?" view that shows what _would_ be released to production if it were released now
   - **Release:** cache `deploy.created_at` as `deployed_at`
   - RSS

 - **Deploys:** add a list of deploys; allow creating releases for old deploys

 - **Weekly Report:**
   - Pair projects with colors somewhere (then don't for "Focus this week")
   - New Section: **Deploys** or **Releases**
   - New Section: **Performance** (shows _histogram_ of response times)
   - New Section: **Superlatives**
     - most total commits per week/day
     - most commits to a project per week/day
     - most projects committed to per week
     - first commit to a project per developer
   - group into supersections
     - "Productivity", "Maintenance", "Development" [?]
     - "Effort", "Task" | "Us", "Them" | "Red", "Blue"
   - add a Customer Satisfaction metric
   - Report on health of tickets

 - **Global:**
   - make mobile site
   - employ Twitter Bootstrap in emails

 - **Testing Report:**
   - Allow editing tickets!
   - Add priority options (to left of ticket): high/low, exclusive checkboxes
   - Add additional verdicts (pass-with-suggestions? unable-to-test?)

 - **Project Dashboard:** (like Daily Report?)
   - New tickets
   - New problems

 - **Houston-Fnord**: (show real-time analytics)
   - Solve for multiple apps (multiple gauges? multiple fields?)
   - **Project Dashboard:**
     - Real-time graph of exception notices
     - Figure out how to show queue history; show more weeks
     - Show deploys _on_ real-time graphs
     - PG stats
