<div id="project_dashboard" class="dashboard">
  <table>
    <tr>
      <td rowspan="2" class="column-1">
        <h2><%= @project.name %></h2>
        
        <div class="graph coming-soon">
          <p class="description">Real-time responses</p>
          <p class="coming-soon">Coming soon</p>
        </div>
        
        <div class="graph coming-soon">
          <p class="description">Real-time statuses</p>
          <p class="coming-soon">Coming soon</p>
        </div>
      </td>
      
      <td id="project_dependencies" class="column-2">
        <ul class="dependencies">
          <% ProjectDependency.for(@project).each do |dependency| %>
            <% indicator = dependency.maintenance_light %>
            <li class="dependency <%= indicator.color %>">
              <span class="dependency-name"><%= dependency.name %></span>
              <span class="dependency-version"><%= format_version(dependency.version) %></span>
              <span class="dependency-message"><%= indicator.message %></span>
            </li>
          <% end %>
        </ul>
      </td>
      
      <td id="project_tickets_by_severity" class="column-3">
        <%
          severities_colors = Houston.config.severities.dup
          severities_colors[nil] = "212121"
          severities = severities_colors.keys.map { |name| name || "None" }
          
          if @project.ticket_tracker_adapter == "Unfuddle"
            tickets_by_severity = Hash[severities.zip([0] * severities.length)]
            severities = @project.ticket_tracker.severities
            @tickets.each do |ticket|
              severity = severities.find { |severity| severity.id == ticket["severity_id"] }
              tickets_by_severity[severity ? severity.name : "None"] += 1
            end
          end
          
        %>

        <% if @project.ticket_tracker_adapter == "Unfuddle" %>
          <div id="severities_graph"></div>
        <% else %>
          <div id="severities_graph" class="placeholder">
            This view only works when the project is configured to use Unfuddle
          </div>
        <% end %>

        <div class="severities-legend">
          <ol>
            <% severities_colors.each do |severity, color|; unless severity.blank? %>
              <li class="severity">
                <b class="bubble" style="background-color: #<%= color %>;"></b>
                <%= severity %>
              </li>
            <% end; end %>
          </ol>
        </div>
      </td>
      
    </tr>
    
    <tr>
      
      <td colspan="2">
        <%

          @projects = [@project]



          week_ends = (8.weeks.ago.to_date..Date.today.end_of_week).step(7)

          ticket_queues = TicketQueue.arel_table
          data = week_ends.map do |week_end|
            scope = TicketQueue \
              .where(ticket_queues[:created_at].lt(week_end)) \
              .where(["ticket_queues.destroyed_at IS NULL or ticket_queues.destroyed_at > ?", week_end]) \
              .group("ticket_queues.queue, tickets.project_id") \
              .select("ticket_queues.queue, tickets.project_id, COUNT(ticket_queues.id) AS count")

            TicketQueue.connection.select_all(scope.to_sql)
          end

          queues = KanbanQueue.all.map(&:slug)
          ticket_counts_by_project_by_queue = {}
          max_queue_size = 0

          queues.each do |queue|
            ticket_counts_by_project = ticket_counts_by_project_by_queue[queue] = {}

            cumulative_totals = [0] * week_ends.length

            @projects.each do |project|
              ticket_counts = ticket_counts_by_project[project] = []
              data.each_with_index do |hashes, i|
                hash = hashes.find { |hash| hash["queue"] == queue && hash["project_id"] == project.id.to_s }
                count = hash ? hash["count"].to_i : 0
                ticket_counts << (cumulative_totals[i] += count)
              end
            end

            max_queue_size = [max_queue_size, cumulative_totals.max].max
          end

        %>

        <table id="project_ticket_queues">
          <tr>
            <% KanbanQueue.all.each do |queue| %>
              <% 
                ticket_counts_by_project = ticket_counts_by_project_by_queue[queue.slug]
                data = @projects.map { |project| ticket_counts_by_project[project] }
                data.unshift([max_queue_size] * 16)
              %>
              <td>
                <%= area_graph({
                  data: data,
                  colors: @projects.map(&:color_value),
                  marker_colors: @projects.map { |project| "#{project.color_value}55" },
                  bg: "212121",
                  line_weight: 2,
                  width: 110,
                  height: 240,
                  axes: false
                }) %>
                <h5><%= queue.name %></h5>
              </td>
            <% end %>
          </tr>
        </table>
      </td>
      
      <!-- <td id="project_top_bugs" class="column-2"></td>
      
      <td id="project_top_tickets" class="column-3"></td> -->
    
    </tr>
    
  </table>
  
  



  
</div>

<% content_for :javascripts do %>
  <script type="text/javascript">
    $(function() {
      
      if(!$('#severities_graph').hasClass('placeholder')) {
        chart = new Highcharts.Chart({
          chart: {
            renderTo: 'severities_graph',
            backgroundColor: null,
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            marginTop: 0,
            marginRight: 0,
            marginBottom: 0,
            marginLeft: 0 },
          colors: <%=raw severities_colors.values.map { |color| "##{color}" }.to_json %>,
          credits: {
            enabled: false },
          title: {
            text: null },
          plotOptions: {
            pie: {
              animation: false,
              shadow: false,
              size: '85%',
              dataLabels: {
                enabled: false },
              states: {
                hover: {
                  enabled: false } } } },
          series: [{
              type: 'pie',
              data: <%=raw tickets_by_severity.to_a.map { |pair| pair[0] == "None" ? {"y" => pair[1], "visible" => false} : pair }.to_json %>
            }],
          tooltip: {
            formatter: function() { return '<b>' + this.point.name + '</b><br />' + this.y + ' tickets'; } } });
      }
    });
  </script>
<% end %>
